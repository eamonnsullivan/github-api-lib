# configuration for a clojure/deps.edn application
version: 2.1

orbs:
  github-release: h-matsuo/github-release@0.1.3

executors:
  tools-deps-executor:
    docker:
      - image: circleci/clojure:openjdk-11-tools-deps-1.10.1.697
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m

commands:
  setup:
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "deps.edn" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "deps.edn" }}

  acceptance-tests:
    steps:
      - run:
          name: check coverage
          command: clojure -M:test:coverage

  deploy-version:
    steps:
      - run:
          name: Update pom.xml
          command: clojure -Spom
      - run:
          name: Build
          command: clojure -M:jar
      - run:
          name: Deploy
          command: clojure -M:deploy
      - run:
          name: Zip up jar file
          command: |
            zip --junk-paths github-api-lib github-api-lib.jar
            cp github-api-lib.zip /tmp

  create-release:
    steps:
      - run:
          name: extract version from pom
          command: |
            echo 'export CURRENT_VERSION=v$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)' >> $BASH_ENV
            source $BASH_ENV
      - github-release/create:
          tag: $CURRENT_VERSION
          title: "Version ${CURRENT_VERSION}"
          description: "Github-related API calls."
          file-path: /tmp/github-api-lib.zip



jobs:
  test:
    executor: tools-deps-executor
    steps:
      - setup
      - acceptance-tests
  deploy:
    executor: tools-deps-executor
    steps:
      - setup
      - acceptance-tests
      - deploy-version
  release:
    executor: github-release/default
    steps:
      - create-release


workflows:
  build-test:
    jobs:
      - test
  build-test-release:
    jobs:
      - deploy:
          context: clojars
          requires:
            - test
          filters:
            branches:
              only: main
      - release:
          context: github
          requires:
            - test
            - deploy
          filters:
            branches:
              only: main
